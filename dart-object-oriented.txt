Object Oriented Dart

===============
Defining Class and Objects
===============
Baisc Structure With an Object
---------------

void main(){  
  
  //Step:2 Creating Object form this class
  var student1 = Student(); // it is one Object and student1 is referance varibale
  
  //to access id, name or this method
  // student1.id
  student1.id;
  student1.name;
  student1.study();
  student1.sleep();
  print("${student1.id} and ${student1.name}");
}

//step:1 define students properties and behaviour
class Student{
  //properties
  int id;        //Instace or Field Variable, default value id null.
  String name;   //Instace or Field Variable, default value id null.

  //So, we may add Instance value
  //int id = 0;
  //String name = "Add Student name";
  
  //behaviour
  void study(){
  }
  void sleep(){
  }
  
}

---------------
Output form Object 'student1'
---------------

void main(){  
  
  //Step:2 Creating object form this class
  var student1 = Student(); // it is one Object and student1 is referance varibale
  
  //to access id, name or this method
  // student1.id
  student1.id = 19;
  student1.name = "RAM";
  student1.study();
  student1.sleep();
  print("${student1.id} and ${student1.name}");
}

//step:1 define students properties and behaviour
class Student{
  //properties
  int id;        //Instace or Field Variable, default value id null.
  String name;   //Instace or Field Variable, default value id null.
  
  //behaviour
  void study(){
    print("${this.name} is now studing"); 
  }
  void sleep(){
    print("${this.name} is now sleeping");
  }
  
}


OUTPUT:
RAM is now studing
RAM is now sleeping
19 and RAM
---------------
Note: 'this' keyword refers to 'name' of this particular 'Student'
Now creaet another Object called 'student2'
---------------

void main(){  
  
  //Step:2 Creating object form this class
  var student1 = Student(); // it is one Object and student1 is referance varibale
  
  //to access id, name or this method
  // student1.id
  student1.id = 20;
  student1.name = "RAM";
  student1.study();
  student1.sleep();
  print("${student1.id} and ${student1.name}");
  
  
  print("");
  
  //creating another object student2
  var student2 = Student(); // it is second Object and student2 is referance varibale
  student2.id = 19;
  student2.name = "Shyam";
  student2.study();
  student2.sleep();
  print("${student1.id} and ${student1.name}");
}

//step:1 define students properties and behaviour
class Student{
  //properties
  int id;        //Instace or Field Variable, default value id null.
  String name;   //Instace or Field Variable, default value id null.
  
  //behaviour
  void study(){
    print("${this.name} is now studing");
  }
  void sleep(){
    print("${this.name} is now sleeping");
  }
  
}

OUTPUT:
RAM is now studing
RAM is now sleeping
20 and RAM

Shyam is now studing
Shyam is now sleeping
20 and RAM


===============
Working with Constructors
===============
1. Default Constructor
2. Parameterized Constructor
3. name Constructor
4. Constant Constructor
Note: 
  i) Name of the Constructor will be same as the class name,
    here Constructor name is 'Student' because class name is 'Student'.
  ii) Constructor did not have any return type means it is by default 'void'.
  iii) What ever we code inside the Constructor, it will executed first.
  iv) With in same calss We may use either Default Constructor or Parameterized Constructor
---------------
1. Default Constructor
Note:
 
---------------

void main(){  
  
  //Step:2 Creating object form this class
  var student1 = Student(); // here student1 is the object
  
  //to access id, name or this method
  // student1.id
  student1.id = 20;
  student1.name = "RAM";
  student1.study();
  student1.sleep();
  print("${student1.id} and ${student1.name}");

}

//step:1 define students properties and behaviour
class Student{
  //properties
  int id;        //Instance or Field Variable, default value id null.
  String name;   //Instance or Field Variable, default value id null.
  
  //Default Constructor
  Student(){
    print("This is my Default Constructor");
  }
  
  //behaviour
  void study(){
    print("${this.name} is now studing");
  }
  void sleep(){
    print("${this.name} is now sleeping");
  }
  
}

---------------
2. Parameterized Constructor:
   When a Constructor contain parameter called Parameterized Constructor.
---------------
void main(){  
  
  var student1 = Student(20,"RAM");  //STEP2

  student1.study();
  student1.sleep();
  print("${student1.id} and ${student1.name}");

}

class Student{
  //properties
  int id;        
  String name;  
  
  
  //STEP1: Parameterized Constructor
  Student(int id, String name){
    this.id = id;  //'this.id' refers to properties and 'id' is parameter
    this.name = name; //do
    
    //if we take those parameter with another name,
    //then we did not need to take 'this.id', Example given below
    // Student(int _id, String _name){
        // id = _id;
        // name = _name;
    //  }
    
  }
  
  //behaviour
  void study(){
    print("${this.name} is now studing");
  }
  void sleep(){
    print("${this.name} is now sleeping");
  }
  
}

---------------
Now we will trim this Parameterized Constructor code
---------------

void main(){  
  
  var student1 = Student(20,"RAM"); 
  
  student1.study();
  student1.sleep();
  print("${student1.id} and ${student1.name}");

}

class Student{
  //properties
  int id;        
  String name;  
  
  //Parameterized Constructor
  Student(this.id, this.name); 
  //here we don't have nay code to write inside the '{}', so we delete it and add ';'this
  
  //behaviour
  void study(){
    print("${this.name} is now studing");
  }
  void sleep(){
    print("${this.name} is now sleeping");
  }
  
}


---------------
3. Name Constructor;
---------------

void main(){  
  
  //STEP 2: name Constructor 
  var student3 = Student.myCustomConstructor();
  student3.id = 22;
  student3.name = "Rahim";
  print("${student3.id} and ${student3.name}");

}

class Student{
  //properties
  int id;        
  String name;  
  
  //STEP 1; name Constructor 
  Student.myCustomConstructor(){
    //if you don't have code to write then delete the {} braket
    //But here we will use some of code inside
    print("This is my Custom Constructor");
  }
  
 
  void study(){
    print("${this.name} is now studing");
  }
  void sleep(){
    print("${this.name} is now sleeping");
  }
  
}








